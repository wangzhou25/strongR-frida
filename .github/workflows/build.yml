name: strongR-frida

on: 
  workflow_dispatch:
  
jobs:
  check_version:
    runs-on: ubuntu-latest
    
    outputs:
      FRIDA_VERSION: ${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}
      ALREADY_RELEASE: ${{ steps.checkReleaseVersion.outputs.ALREADY_RELEASE }}
    steps:
      - name: Pull Frida Latest Release
        id: pullFridaLatestRelease
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releaseResponse = await github.repos.getLatestRelease({
              owner: 'frida',
              repo: 'frida',
            })
            const {
              data: { tag_name: ver }
            } = releaseResponse;
            core.setOutput('FRIDA_VERSION', ver);
      - name: Check release version
        id: checkReleaseVersion
        uses: actions/github-script@v3.1.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            try {
              const releaseVersion = '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'
              const releaseResponse = await github.repos.getReleaseByTag({
                owner: '${{ secrets.GIT_OWNER }}',
                repo: '${{ secrets.GIT_REPO }}',
                tag: releaseVersion
              });
              const {
                data: { tag_name: ver }
              } = releaseResponse;
              if (ver == '${{ steps.pullFridaLatestRelease.outputs.FRIDA_VERSION }}'){
                  core.setOutput('ALREADY_RELEASE', '1');
              }
              else{
                  core.setOutput('ALREADY_RELEASE', '0');
              }
            } catch (e) {
              if(e.message == 'Not Found'){
                core.setOutput('ALREADY_RELEASE', '0');
              }
              else{
                core.setFailed(e.message);
              }
            }
     
     
  create_release:
    needs: check_version
    runs-on: ubuntu-20.04
    if: needs.check_version.outputs.ALREADY_RELEASE == '0'

    steps:
      - uses: actions/create-release@master
        id: createRelease
        name: Create Runner Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          release_name: "${{ needs.check_version.outputs.FRIDA_VERSION }}"
          prerelease: false

  android_build:
    runs-on: ubuntu-20.04
    needs: [check_version, create_release]

    steps:
    - uses: actions/checkout@v2.3.4

    - uses: actions/setup-node@v2.1.4
      with:
        node-version: '10'
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r24-beta2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.0

    - name: Check Ruby version
      run: |
        echo "Checking Ruby version:"
        ruby -v
    
    - name: Ensure Ruby 3.2.0 is in PATH
      run: |
        echo "Ruby version in PATH:"
        which ruby
        ruby -v

    - name: Install dependencies
      run: |
        sudo apt-get update && DEBIAN_FRONTEND=noninteractive sudo apt-get install build-essential tree ninja-build gcc-multilib g++-multilib lib32stdc++-9-dev flex bison xz-utils python3-requests python3-setuptools python3-dev python3-pip libc6-dev libc6-dev-i386 -y
        gem update --system
        gem install ffi -v 1.17.0
        gem install fpm -v 1.11.0 --no-document
        python3 -m pip install lief graphlib
      
    - name: Build frida for Android
      shell: bash
      run: |
        git config --global user.email "$wangzhou_25@163.com"
        git config --global user.name "wangzhou25"
        git clone https://github.com/wangzhou25/strongR-frida.git
        export ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}
        git clone --recurse-submodules https://github.com/frida/frida
        cd frida/subprojects/frida-core
        git am ../../../strongR-frida/frida-core/*.patch
        cd ../../

    - name: Configure
      shell: bash
      run: |
          cd frida
          ./configure  --host=android-${{ matrix.arch }} --enable-portal -- -Dfrida-gum:devkits=gum,gumjs -Dfrida-core:devkits=core

    - name: Compile
      run: make

    - name: Check release version
      id: checkReleaseVersion
      uses: actions/github-script@v3.1.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          try {
            const releaseVersion = '${{ needs.check_version.outputs.FRIDA_VERSION }}'
            const releaseResponse = await github.repos.getReleaseByTag({
              owner: 'wangzhou25',
              repo: 'strongR-frida',
              tag: releaseVersion
            })
            const {
              data: { id: releaseId, html_url: htmlUrl, upload_url: uploadUrl }
            } = releaseResponse;
            core.setOutput('id', releaseId);
            core.setOutput('html_url', htmlUrl);
            core.setOutput('upload_url', uploadUrl);
            core.setOutput('version', releaseVersion);
          } catch (e) {
            core.setFailed(e.message);
          }
          
    - name: Upload android arm frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-arm/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-arm'
        asset_content_type: application/octet-stream
  
    - name: Upload android arm64 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-arm64/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-arm64'
        asset_content_type: application/octet-stream
    
    - name: Upload android x86 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-x86/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-x86'
        asset_content_type: application/octet-stream
        
    - name: Upload android x86_64 frida-server for strongR-frida
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: '${{ steps.checkReleaseVersion.outputs.upload_url }}'
        asset_path: '${{ github.workspace }}/frida/build/frida-android-x86_64/bin/frida-server'
        asset_name: 'hluda-server-${{ needs.check_version.outputs.FRIDA_VERSION }}-android-x86_64'
        asset_content_type: application/octet-stream
